---
- name: Update kube config
  block:
    - name: Read kube config as fact
      ansible.builtin.set_fact:
        kube_config_content: "{{ lookup('ansible.builtin.file', '{{ kubeconfig }}') | from_yaml }}"

    - name: Update to kube config clusters
      ansible.utils.update_fact:
        updates:
          - path: "kube_config_content.clusters[{{ index }}].cluster.certificate-authority-data"
            value: "{{ tf.outputs.ca_crt.value | b64encode }}"
          - path: "kube_config_content.clusters[{{ index }}].cluster.server"
            value: "{{ tf.outputs.k3s_external_url.value }}"
      vars:
        index: "{{ kube_config_content.clusters | ansible.utils.index_of('eq', workspace, 'name') }}"
      register: updated
    - ansible.builtin.set_fact:
        kube_config_content: "{{ updated.kube_config_content }}"

    - name: Update to kube config users
      ansible.utils.update_fact:
        updates:
          - path: "kube_config_content.users[{{ index }}].user.token"
            value: "{{ tf.outputs.token.value }}"
      vars:
        index: "{{ kube_config_content.users | ansible.utils.index_of('eq', workspace, 'name') }}"
      register: updated
    - ansible.builtin.set_fact:
        kube_config_content: "{{ updated.kube_config_content }}"

    - name: Update to kube config context
      ansible.utils.update_fact:
        updates:
          - path: "kube_config_content.current-context"
            value: "{{ workspace }}"
      register: updated
    - set_fact:
        kube_config_content: "{{ updated.kube_config_content }}"

    - name: Write new kube config
      ansible.builtin.copy:
        dest: "/home/{{ username }}/.kube/config"
        content: "{{ kube_config_content | to_nice_yaml }}"
        mode: "0600"
  tags:
    - "1"
